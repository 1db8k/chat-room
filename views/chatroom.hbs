<div class="chatListDiv">
	<div class="chatMessagesPanel">
		<div class="chatMessages">
			<!-- Loop for chat messages -->
		</div>

			<div class="typePanel userInput" contenteditable="true" data-placeholder="Type here and press enter"></div>
			<a href="#" id="uploadFile" class="fileUploadBtn">Photo</a>

	</div>
	<div class="chatUsersBanner">
		<div class="chatUsers">
			<!-- Loop  for chat users -->
		</div>
		<div class="toggleButtonContainer">
			<i class="fa fa-chevron-circle-down toggleButton" aria-hidden="true"></i>
		</div>
	</div>
</div>
<script type="text/javascript" src="/socket.io/socket.io.js"></script>
<script type="text/javascript">
	window.addEventListener('load', function() {
		var socket = io(window.location.host + '/chatter', {
			transports: ['websocket']
		})
		var roomID = '{{roomID}}'
		var userFullName = '{{user.fullName}}'
		var userPic = '{{user.profilePic}}'
		var chatUsers = document.querySelector('.chatUsers')
		var chatMessages = document.querySelector('.chatMessages')
		var userInput = document.querySelector('.userInput')
		var toggleButtonContainer = document.querySelector('.toggleButtonContainer')

		function userList(user) {
			return `<div class="userBlock">
	<div class="userPic userListPic" style="background-image: url('${userPic}');" alt="${userFullName}"></div>
	<div class="cuserName">${user.userFullName}</div>
</div>`
		}

		function updateFeed(userPic, userFullName, message, ownMessage) {
			var messageHTML = document.createElement('div')
			messageHTML.classList.add('chatBlock')
			var inner
			if (ownMessage) {
				messageHTML.classList.add('ownMessage')
				inner = `<div class="chatMsg">${message}</div>
<div class="chatMsgArrow"></div>`
			} else {
				messageHTML.classList.add('othersMessage')
				inner = `<div class="userPic" style="background-image: url('${userPic}');" alt="${userFullName}"></div>
<div class="chatMsgArrow"></div>
<div class="chatMsg">${message}</div>`
			}

			messageHTML.innerHTML = inner
			chatMessages.appendChild(messageHTML)
			chatMessages.scrollTop = chatMessages.scrollHeight
		}

		socket.on('connect', () => {
			socket.emit('join', {
				roomID: roomID,
				userFullName: userFullName,
				userPic: userPic
			})
		})

		socket.on('updateUserList', data => {
			let parsedData = JSON.parse(data)
			let usersListData = ''
			for (var i = 0; i < parsedData.length; i++) {
				var user = parsedData[i]
				 console.log(`JOINED name: ${user.userFullName} and user ID: ${user.userID}`)
				usersListData += userList(user)
			}
			chatUsers.innerHTML = usersListData
		})

		socket.on('inMessage', data => {
			var parsedData = JSON.parse(data)
			updateFeed(parsedData.userPic, parsedData.userFullName, parsedData.message, false)
		})

		// Detect enter in input field and emit new message.
		userInput.addEventListener('keyup', function(e) {
			e.preventDefault()
			if (e.which === 13 && this.innerText !== '') {
				socket.emit('newMessage', {
						roomID: roomID,
						userFullName: userFullName,
						userPic: userPic,
						message: this.innerText
					})
					// Update the local feed
				updateFeed(userPic, userFullName, this.innerText, true)
				this.innerText = ''
			}
		})

		// Detect click on toggle button.
		toggleButtonContainer.addEventListener('click', function (e) {
			var icon = toggleButtonContainer.childNodes[1]
			var currentClass
			var otherClass
			if (icon.classList.contains('fa-chevron-circle-down')) {
				currentClass = 'fa-chevron-circle-down'
				otherClass = 'fa-chevron-circle-up'
				chatUsers.classList.add('droppedDown')
			} else {
				currentClass = 'fa-chevron-circle-up'
				otherClass = 'fa-chevron-circle-down'
				chatUsers.classList.remove('droppedDown')
			}
			icon.classList.remove(currentClass)
			icon.classList.add(otherClass)
		})

	})
</script>
